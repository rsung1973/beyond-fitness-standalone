
@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    UserProfile _model;
    CalendarEventViewModel _viewModel;
    UserProfile _profile;

    BookingLessonPageModel _pageModel = (BookingLessonPageModel)ViewBag.PageModel;

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _model = (UserProfile)this.Model;
    _viewModel = (CalendarEventViewModel)ViewBag.ViewModel;
    _profile = await Context.GetUserAsync();
    LessonPriceType price = models.CurrentTrialLessonPriceForExamination();
    var attendedCheck = models.GetTable<LessonTime>()
        .Join(models.GetTable<GroupingLesson>()
        .Join(models.GetTable<RegisterLesson>()
        .Where(r => r.UID == _model.UID),
        g => g.GroupID, r => r.RegisterGroupID, (g, r) => g),
        l => l.GroupID, g => g.GroupID, (l, g) => l);

    LessonPriceType priceBR = models.CurrentTrialLessonPriceForBR();
}

@{
    if (price != null && priceBR != null /*&& (!attendedCheck.Any() || _model.UserProfileExtension.CurrentTrial.HasValue)*/)
    {

        var trialLesson = models.GetTable<RegisterLesson>()
        .Where(r => r.UID == _model.UID)
        .Where(r => r.ClassLevel == price.PriceID || r.ClassLevel == priceBR.PriceID);
        //.Where(r => r.LessonPriceType.Status == (int)Naming.LessonPriceStatus.體驗課程)
        //.Where(r => !r.BranchStore.Status.HasValue || (r.BranchStore.Status & (int)BranchStore.StatusDefinition.VirtualClassroom) == 0);
        var trialLessonItem = trialLesson.FirstOrDefault();
        var trialBookable = trialLessonItem == null;

        //if (trialBookable)
        //{
        //    _pageModel.HasChoice = true;
        //}

        <li class="list-group-item">
            <div class="media">
                <div class="pull-left">
                    <div class="controls">
                        <label class="fancy-checkbox">
                            <input type="checkbox" disabled="@(trialBookable==false)" name="RegisterID" id="trialLesson" value="" onclick="selectBooking(this, '@((int)Naming.LessonPriceStatus.體驗課程)', @(price?.PriceID ?? -1));">
                            <span></span>
                        </label>
                    </div>
                </div>
                <div class="media-body">
                    <div class="media-heading">
                        <a class="m-r-10">P.T Session(60分鐘) - 檢測</a>
                        <small class="float-right text-muted"><time>NT @(price.ListPrice) @(trialBookable ? 1 : 0)/1</time></small>
                        <div class="msg">
                            <span class="float-right">
                                <span class="badge bg-blue"><i class="zmdi zmdi-pin"></i> 現場</span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </li>
        <li class="list-group-item">
            <div class="media">
                <div class="pull-left">
                    <div class="controls">
                        <label class="fancy-checkbox">
                            <input type="checkbox" disabled="@(trialBookable==false)" name="RegisterID" id="trialLesson" value="" onclick="selectBooking(this, '@((int)Naming.LessonPriceStatus.體驗課程)', @(priceBR.PriceID));">
                            <span></span>
                        </label>
                    </div>
                </div>
                <div class="media-body">
                    <div class="media-heading">
                        <a class="m-r-10">P.T Session(60分鐘) - BR</a>
                        <small class="float-right text-muted"><time>NT @(priceBR.ListPrice) @(trialBookable ? 1 : 0)/1</time></small>
                        <div class="msg">
                            <span class="float-right">
                                <span class="badge bg-blue"><i class="zmdi zmdi-pin"></i> 現場</span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </li>
    }

    price = models.GetTable<LessonPriceType>()
                                    .Where(p => p.Status == (int)Naming.LessonPriceStatus.體驗課程)
                                    .Where(p => p.LessonPriceProperty.Any(t => t.PropertyID == (int)Naming.LessonPriceFeature.運動恢復課程))
                                    .Where(p => p.LessonPriceProperty.Any(t => t.PropertyID == (int)Naming.LessonPriceFeature.單堂現場付款))
                                    .FirstOrDefault();
    if (price != null)
    {
        var trialLesson = models.GetTable<RegisterLesson>()
            .Where(r => r.UID == _model.UID)
            .Where(r => r.ClassLevel == price.PriceID);

        var trialBookable = !trialLesson.Any();

        BuildPriceItem(price, "S.R Session", trialBookable);
    }

    price = models.GetTable<LessonPriceType>()
                                .Where(p => p.Status == (int)Naming.LessonPriceStatus.體驗課程)
                                .Where(p => p.LessonPriceProperty.Any(t => t.PropertyID == (int)Naming.LessonPriceFeature.營養課程))
                                .Where(p => p.LessonPriceProperty.Any(t => t.PropertyID == (int)Naming.LessonPriceFeature.單堂現場付款))
                                .FirstOrDefault();
    if (price != null)
    {
        BuildPriceItem(price, "S.D Session");
    }

}
@functions
{
    void BuildPriceItem(LessonPriceType price, String description, bool bookable = true)
    {
        <li class="list-group-item">
            <div class="media">
                <div class="pull-left">
                    <div class="controls">
                        <label class="fancy-checkbox">
                            <input type="checkbox" name="RegisterID" disabled="@(bookable == false)" value="" data-version="@((int)Naming.ContractVersion.Ver2022)" data-location="@(price.ForDietary ? "option.virtual-store" : "")"
                                   onclick="selectBooking(this, '@(price.Status)',@(price.PriceID));">
                            <span></span>
                        </label>
                    </div>
                </div>
                <div class="media-body">
                    <div class="media-heading">
                        <a class="m-r-10">
                            @($"{description}({price.DurationInMinutes}分鐘)")
                        </a>
                        <small class="float-right text-muted"><time>NT @(price.ListPrice) @(bookable ? 1 : 0)/1</time></small>
                        <div class="msg">
                            <span class="float-right">
                                @if (price.IsDistanceLesson)
                                {
                                    <span class="badge bg-green"><i class="zmdi zmdi-pin"></i> 遠距</span>
                                }
                                else
                                {
                                    <span class="badge bg-blue"><i class="zmdi zmdi-pin"></i> 現場</span>
                                }
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </li>
    }
}