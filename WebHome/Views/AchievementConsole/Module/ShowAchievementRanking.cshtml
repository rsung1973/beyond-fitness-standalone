

@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;
    List<decimal?[]> _model;
    MonthlyIndicatorQueryViewModel _viewModel;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;
    _model = (List<decimal?[]>)this.Model;
    _viewModel = (MonthlyIndicatorQueryViewModel)ViewBag.ViewModel;

    List<decimal?[]> items = _model;

    var rankingItems = items.Any()
            ? items
                .Where(s => s[1] > 0)
                .GroupBy(s => s[2])
                .OrderByDescending(g => g.Key)
            : null;

}

<div class="pricing-deco @Html.Raw(ViewBag.BlockClassName)">
    <svg class="pricing-deco-img" enable-background="new 0 0 300 70" height="70px"
         preserveAspectRatio="none" version="1.1" viewBox="0 0 300 70" width="200px" x="0px" xml:space="preserve"
         xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" y="0px">
    <path class="deco-layer deco-layer--1"
          d="M30.913,43.944c0,0,42.911-34.464,87.51-14.191c77.31,35.14,113.304-1.952,146.638-4.729&#x000A;	c48.654-4.056,69.94,16.218,69.94,16.218v54.396H30.913V43.944z"
          fill="#FFFFFF" opacity="0.6"></path>
    <path class="deco-layer deco-layer--2"
          d="M-35.667,44.628c0,0,42.91-34.463,87.51-14.191c77.31,35.141,113.304-1.952,146.639-4.729&#x000A;	c48.653-4.055,69.939,16.218,69.939,16.218v54.396H-35.667V44.628z"
          fill="#FFFFFF" opacity="0.6"></path>
    <path class="deco-layer deco-layer--3"
          d="M43.415,98.342c0,0,48.283-68.927,109.133-68.927c65.886,0,97.983,67.914,97.983,67.914v3.716&#x000A;	H42.401L43.415,98.342z"
          fill="#FFFFFF" opacity="0.7"></path>
    <path class="deco-layer deco-layer--4"
          d="M-34.667,62.998c0,0,56-45.667,120.316-27.839C167.484,57.842,197,41.332,232.286,30.428&#x000A;	c53.07-16.399,104.047,36.903,104.047,36.903l1.333,36.667l-372-2.954L-34.667,62.998z"
          fill="#FFFFFF"></path>
            </svg>
    @if (items.Any(i => i[1]>0))
    {
        <div class="pricing-price">
            <span class="pricing-currency">
                <i class="zmdi livicon-evo"
                   data-options="name: trophy.svg; size: 24px; style: lines; strokeColor:#1A1A1A; strokeWidth:1px; autoPlay:true"></i>
            </span>
            @{
                var rankingFirst = rankingItems.First();
                if (rankingFirst.Count() > 1)
                {
                    <img src="~/ConsoleHome/images/avatar/avatars.png" class="rounded-circle sizefixed" width="200px">
                }
                else
                {
                    var rankingItem = rankingFirst.First();
                    var coach = models.GetTable<ServingCoach>().Where(c => c.CoachID == rankingItem[0]).First();
                    ViewBag.ProfileClass = "rounded-circle sizefixed";
                    await Html.RenderPartialAsync("~/Views/Common/ProfileImage.cshtml", coach.UserProfile);
                }
            }
        </div>
        <span class="pricing-period">
            @foreach (var rankingItem in rankingItems.First())
            {
                var coach = models.GetTable<ServingCoach>().Where(c => c.CoachID == rankingItem[0]).First();
                <text>@Html.Raw(coach.UserProfile.FullName())<br /></text>
            }
        </span>
    }
    else
    {
        <div class="pricing-price">
            <span class="pricing-currency">
                <i class="zmdi livicon-evo"
                   data-options="name: trophy.svg; size: 24px; style: lines; strokeColor:#1A1A1A; strokeWidth:1px; autoPlay:true"></i>
            </span>
            <img src="~/ConsoleHome/images/avatar/noname.png" class="rounded-circle sizefixed" width="200px" />
        </div>
        <span class="pricing-period">敬請期待</span>
    }
    <h3 class="pricing-title text-center">Best <br />@(ViewBag.Terms)</h3>
</div>
@if (items.Any())
{
    <ul class="feature-list">
        @foreach (var g in rankingItems.Skip(1).Take(4))
        {
            foreach (var rankingItem in g)
            {
                var coach = models.GetTable<ServingCoach>().Where(c => c.CoachID == rankingItem[0]).First();
                <li>@Html.Raw(coach.UserProfile.FullName())</li>
            }
        }
    </ul>
}

