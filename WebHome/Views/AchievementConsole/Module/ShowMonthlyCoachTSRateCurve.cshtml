

@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using CommonLib.Utility
@functions
{
    IQueryable<MonthlyCoachRevenueIndicator> _model;
    MonthlyCoachRevenueIndicator[] items;
}
@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;
    MonthlyCoachRevenueIndicatorQueryViewModel _viewModel;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];;
    _modelState = ViewContext.ModelState;
    _model = (IQueryable<MonthlyCoachRevenueIndicator>)this.Model;

    _viewModel = (MonthlyCoachRevenueIndicatorQueryViewModel)ViewBag.ViewModel;

    items = _model.ToArray();

}

<script>

    var brDevDT = @Html.Raw(items.Select(m=> m.BRCount>0 && m.ActualBRCount>0 ? Math.Round(m.ActualBRCount.Value*100M/m.BRCount.Value,2) : 0).JsonStringify());
    var brDealDT = @Html.Raw(items.Select(m=> m.BRTrialCount>0 && m.DealedCountWithBR>0 ? Math.Round(m.DealedCountWithBR.Value*100M/m.BRTrialCount.Value,2) : 0).JsonStringify());
    var vsitorDT = @Html.Raw(items.Select(m=> m.ExamTrialCount>0 && m.TrialDealedCount>0 ? Math.Round(m.TrialDealedCount.Value*100M/m.ExamTrialCount.Value,2) : 0).JsonStringify());

    //指定圖表的配置項和資料
    $global.echarts.option = {
        tooltip: {
            trigger: 'axis'
        },
        legend: {
            data: ['BR開發率', 'BR成交率', '檢測成交率']
        },
        toolbox: {
            feature: {
                saveAsImage: {}
            }
        },
        xAxis: {
            type: 'category',
            boundaryGap: false,
            data: @Html.Raw(items.Select(m=>$"{m.MonthlyIndicator.Year}{m.MonthlyIndicator.Month:00}").JsonStringify())
        },
        yAxis: {
            type: 'value',
            axisLine: {
                show: false
            },
            axisTick: {
                show: false
            },
            axisLabel: {
                formatter: '{value} %'
            },
        },
        series: [
            {
                name: 'BR開發率',
                type: 'line',
                symbol: 'triangle',
                symbolSize: 10,
                data: brDevDT,
                label: {
                    position: 'bottom',
                    formatter: function (v) {
                        return v.value + '%';
                    }
                },            },
            {
                name: 'BR成交率',
                type: 'line',
                symbol: 'triangle',
                symbolSize: 10,
                data: brDealDT,
                label: {
                    position: 'bottom',
                    formatter: function (v) {
                        return v.value + '%';
                    }
                },
            },
            {
                name: '檢測成交率',
                type: 'line',
                symbol: 'triangle',
                symbolSize: 10,
                //stack: 'Total',
                label: {
                    position: 'bottom',
                    formatter: function (v) {
                        //return vsitorDT[v.dataIndex]+'%';
                        return v.value + '%';
                    }
                },
                data: vsitorDT
            }
        ]
    };

</script>