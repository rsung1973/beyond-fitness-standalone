@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using System.Web
@using System.Data
@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility
@using CommonLib.DataAccess
@using CommonLib.Core.Utility
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using WebHome.Models.Resources
@using WebHome.Properties
@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;

    QueryViewModel _viewModel = ViewBag.ViewModel as QueryViewModel;
    var Response = ViewContext.HttpContext.Response;

    var taskItems = models.GetTable<PDQTask>()
        .Join(models.GetTable<PDQTaskBonus>(),
            t => t.TaskID, q => q.TaskID, (t, q) => t)
        .Select(t => t.UID);


    IQueryable<UserProfile> items = models.GetTable<UserProfile>().Where(u => taskItems.Contains(u.UID));

    if (items.Count() == 0)
    {
        Response.Cookies.Append("fileDownloadToken", _viewModel.FileDownloadToken ?? "");
        await Html.RenderPartialAsync("~/Views/ConsoleHome/Shared/JsAlert.cshtml", model: "資料不存在!!");
    }
    else
    {
        foreach (var item in items)
        {
            await Html.PartialAsync("~/Views/LearnerActivity/Page.zh-TW/Module/InitializeBonusSettlement.cshtml", item);
        }

        var details = items
                .Select(i => new
                {
                    姓名 = i.FullName(true),
                    Beyond點數 = i.BonusDepositAccount.DepositPoint,
                });


        Response.Cookies.Append("fileDownloadToken", _viewModel.FileDownloadToken ?? "");
        Response.Headers.Add("Cache-control", "max-age=1");
        Response.ContentType = "application/vnd.ms-excel";
        Response.Headers.Add("Content-Disposition", String.Format("attachment;filename={0}({1:yyyy-MM-dd HH-mm-ss}).xlsx", HttpUtility.UrlEncode("LearnerBonusPoint"), DateTime.Now));

        using (DataSet ds = new DataSet())
        {
            DataTable table = details.ToDataTable();
            table.TableName = $"截至 {DateTime.Today:yyyyMMdd} 點數轉換";

            ds.Tables.Add(table);

            using (var xls = ds.ConvertToExcel())
            {
                String tmpPath = System.IO.Path.Combine(FileLogger.Logger.LogDailyPath, $"{DateTime.Now.Ticks}.tmp");
                using (FileStream tmp = System.IO.File.Create(tmpPath))
                {
                    xls.SaveAs(tmp);
                    tmp.Flush();
                    tmp.Position = 0;

                    await tmp.CopyToAsync(Response.Body);
                }
                await Response.Body.FlushAsync();

                System.IO.File.Delete(tmpPath);
            }
        }
        Response.Body.Close();
    }
}