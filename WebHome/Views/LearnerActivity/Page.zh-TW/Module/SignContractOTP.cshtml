@using System.IO
@using System.Linq.Expressions
@using System.Text
@using System.Net
@using System.Net.Mail
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.Extensions.Logging

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using WebHome.Models.Resources
@using WebHome.Properties;

@{
    Layout = "~/Views/LearnerActivity/Page.zh-TW/Module/CheckOTPTemplate.cshtml";

    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;

    String lang = ViewBag.Lang ?? "zh-TW";
    var langPath = lang == "zh-TW"
    ? "tw"
    : lang == "en-US"
    ? "en"
    : "ja";

    //await Html.RenderPartialAsync("~/Views/LearnerActivity/Template/GlobalResource.cshtml");
    //dynamic globalResource = ViewContext.HttpContext.Items["GlobalResource"] as dynamic;

    QueryViewModel _viewModel = ViewBag.ViewModel as QueryViewModel;
    int contractID = -1;

    if (_viewModel?.KeyID != null)
    {
        contractID = _viewModel.DecryptKeyValue();
    }

    var item = models.GetTable<CourseContract>().Where(c => c.ContractID == contractID).FirstOrDefault();
    if (item != null)
    {
        var profile = await Context.GetUserAsync();
        profile = profile.LoadInstance(models);
        profile.UserProfileExtension.PIN = item.CourseContractExtension.SignerPIN;
        profile.UserProfileExtension.PINExpiration = DateTime.Now.AddMinutes(120);
        models.SubmitChanges();
    }

}

@section SendOTP
{
    <a href="javascript:sendOTP('@Html.Raw(contractID.EncryptKey())');"
       class="text-center d-block mb-4 font-12 color-highlight font-14">是否沒有收到OTP？點此重新發送</a>
    <script>
            function sendOTP(keyID) {
                var viewModel = {
                    'KeyID': keyID
                };
                doPost('SendContractOTP', viewModel, function (data) {
                    Swal.fire(
                        '動態密碼已重送!',
                        '請開啟信箱查看動態密碼 Bye!',
                        'success'
                    ).then((result) => {
                        $('').launchDownload('SignContractOTP', viewModel);
                    });
                });
            }
    </script>
}

@section PrepareOTP
{

}

@section ValidatePIN
{
    <script>

        function closeOTP() {
            window.location.href = 'ContractEvents';
        }

        function validatePIN() {
            var viewModel = {
                'KeyID': '@Html.Raw(contractID.EncryptKey())',
                'SignerPIN': $('input[name="Code"]').serializeObject().Code.join(''),
            };
            doPost('@Html.Raw(Url.Action("ValidateSignerPIN", "LearnerActivity"))', viewModel,
                function (data) {
                    $('#update-Passwd').html(data);
                    $('#update-Passwd').addClass('menu-active');
                    $('.menu-hider').addClass('menu-active');
                },
                function () {
                    $('.menu-active').removeClass('menu-active');
                });
        }

    </script>
}
