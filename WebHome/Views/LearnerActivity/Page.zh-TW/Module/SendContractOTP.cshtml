@using System.IO
@using System.Linq.Expressions
@using System.Text
@using System.Net
@using System.Net.Mail
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.Extensions.Logging

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using WebHome.Models.Resources
@using WebHome.Properties
@using WebHome.Helper.MessageOperation

@{
    Layout = "~/Views/LearnerActivity/Page.zh-TW/Module/CheckOTPTemplate.cshtml";

    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;

    String lang = ViewBag.Lang ?? "zh-TW";
    var langPath = lang == "zh-TW"
    ? "tw"
    : lang == "en-US"
    ? "en"
    : "ja";

    //await Html.RenderPartialAsync("~/Views/LearnerActivity/Template/GlobalResource.cshtml");
    //dynamic globalResource = ViewContext.HttpContext.Items["GlobalResource"] as dynamic;

    QueryViewModel _viewModel = ViewBag.ViewModel as QueryViewModel;
    int contractID = -1;

    if (_viewModel?.KeyID != null)
    {
        contractID = _viewModel.DecryptKeyValue();
    }

    var item = models.GetTable<CourseContract>().Where(c => c.ContractID == contractID).FirstOrDefault();
    if (item != null)
    {
        var body = await Html.PartialAsync("~/Views/LineEvents/Message/NotifyLearnerToSignContract.cshtml", item);
        var jsonData = body.GetHtmlString();
        jsonData.PushLineMessage();

        var profile = (await Context.GetUserAsync()).LoadInstance(models);
        await Html.RenderPartialAsync("~/Views/LearnerActivity/SendOTP.cshtml", profile);
    }

}
