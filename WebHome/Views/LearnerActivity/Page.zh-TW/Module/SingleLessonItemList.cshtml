@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using System.Web

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using WebHome.Models.Resources
@using WebHome.Properties
@using WebHome.Helper.BusinessOperation

@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;

    ViewBag.From = "Single";

    String lang = ViewBag.Lang ?? "zh-TW";
    var langPath = lang == "zh-TW"
        ? "tw"
        : lang == "en-US"
            ? "en"
            : "ja";

    var profile = await Context.GetUserAsync();

    int currentIndex = (ViewBag.ViewModel as QueryViewModel)?.CurrentIndex ?? 0;

    var lessonItems = models.GetTable<LessonTime>()
                                .Where(l => l.RegisterLesson.UID == profile.UID)
                                .Where(l => l.RegisterLesson.LessonPriceType.LessonPriceProperty.Any(p => p.PropertyID == (int)Naming.LessonPriceFeature.單堂現場付款))
                                .OrderByDescending(l => l.LessonID)
                                .Skip(currentIndex * 5)
                                .Take(5);

}

@{
    int idx = 0;
    foreach (var item in lessonItems)
    {

        <div class="d-flex" onclick="javascript:showPaymentInfo('@Html.Raw(item.RegisterLesson.IntuitionCharge.TuitionInstallment.FirstOrDefault().InstallmentID.EncryptKey())');">
            <div>
                <a href="#" class="icon icon-l bg-beyond-dark color-beyondwhite-dark rounded-m shadow-xl">
                    <i class="fa-solid fa-user font-24"></i>
                </a>
            </div>
            <div class="align-self-center ps-3">
                <h5 class="font-500 font-18 mb-1 letter-spacing-1">@(item.RegisterLesson.LessonPriceType?.SimpleDescription.CutString('（'))</h5>
                <span class="font-15 color-theme opacity-60 letter-spacing-1">
                    @($"{item.ClassTime:HH:mm}") -
                    @(item.ClassTime.Value.AddMinutes(item.DurationInMinutes.Value).ToString("HH:mm"))
                </span>
            </div>
            <div class="align-self-center ms-auto me-3">
                <h5 class="mb-0 text-end font-400 font-14"><i class="fa-solid fa-location-dot pe-2"></i>@(item.BranchStore.BranchName)</h5>
                <span class="color-theme d-block text-end font-12">@($"{item.ClassTime:yyyy/MM/dd}")</span>
            </div>
            <div class="align-self-center">
                <i class="fa fa-angle-right color-highlight font-16"></i>
            </div>
        </div>

        <div class="divider mt-4 mb-4"></div>

        idx++;
    }

    if (idx == 5)
    {
        <script>
            currentIndex++;
        </script>
    }
    else
    {
        <script>
            currentIndex = -1;
        </script>
    }

}