@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Http
@using System.Web

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using WebHome.Models.Resources
@using WebHome.Properties
@using WebHome.Helper.BusinessOperation

@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;

    String lang = ViewBag.Lang ?? "zh-TW";
    var langPath = lang == "zh-TW"
        ? "tw"
        : lang == "en-US"
            ? "en"
            : "ja";

    LearnerViewModel _viewModel = ViewBag.ViewModel as LearnerViewModel;
    if(_viewModel.KeyID!=null)
    {
        _viewModel.UID = _viewModel.DecryptKeyValue();
    }

    int exchangeRate = 50;

    var learner = models.GetTable<UserProfile>().Where(u => u.UID == _viewModel.UID).FirstOrDefault();

}
@if(learner==null)
            {
    <div>N/A</div>
}
else
{
    await Html.RenderPartialAsync("~/Views/LearnerActivity/Page.zh-TW/Module/InitializeBonusSettlement.cshtml", learner);
    <div>@Html.Raw(learner.FullName()),@(learner.BonusDepositAccount.DepositPoint)</div>
}
