@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using WebHome.Models.Resources
@functions
{
    const String MissionID = "02_SR";
}
@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;

    ViewBag.MainClass = "home";
    ViewBag.MenuDark = false;
    String lang = ViewBag.Lang ?? "zh-TW";
    var langPath = lang == "zh-TW"
        ? "tw"
        : lang == "en-US"
            ? "en"
            : "ja";

    int? _model = (int?)this.Model;

    if (ViewBag.PrepareMission == true)
    {
        PromotionAppraisalDataModel appraisal = (PromotionAppraisalDataModel)ViewBag.Appraisal;
        var checkList = appraisal.Missions;

        var mission = checkList.Where(m => m.MissionID == MissionID).FirstOrDefault();
        if (mission == null)
        {
            mission = new CampaignMissionDataModel
            {
                ViewPath = "~/Views/LearnerActivity/Page.zh-TW/Module/CampaignProcess/SRMission.cshtml",
                Goal = _model,
                CheckResult = false,
                MissionID = MissionID,
                ResultModel = null
            };
            checkList.Add(mission);
        }
        mission.Goal = _model;
        mission.CheckResult = false;
    }

    if (ViewBag.ShowMission == true)
    {
        <li>完成<em class="px-1">@(_model) S.R</em></li>
    }

    if (ViewBag.CheckMission == true)
    {
        await Html.RenderPartialAsync("~/Views/LearnerActivity/Page.zh-TW/Module/CampaignProcess/CheckSRMission.cshtml", _model);
    }

    if (ViewBag.ReviewMission == true)
    {
        CampaignMissionDataModel mission = (CampaignMissionDataModel)ViewBag.CurrentMission;

        <div class="card bg-beyond-dark text-center">

            <img src="@Html.Raw(mission.CheckResult ? "../images/icons/complete.png" : "../images/icons/notcomplete.png")" class="rounded-circle mb-2 mt-2" width="50" height="50">

            <span class="d-block color-beyondwhite-dark @Html.Raw(mission.CheckResult ? "" : "opacity-50") font-14">S.R<small class="d-block">(@(((IQueryable<dynamic>)mission.ResultModel).Count())/@(mission.Goal))</small></span>

        </div>
    }
}

