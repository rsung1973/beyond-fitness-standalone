@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using WebHome.Models.Resources

@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;

    ViewBag.MainClass = "home";
    ViewBag.MenuDark = false;
    String lang = ViewBag.Lang ?? "zh-TW";
    var langPath = lang == "zh-TW"
        ? "tw"
        : lang == "en-US"
            ? "en"
            : "ja";

    PromotionAppraisalDataModel appraisal = (PromotionAppraisalDataModel)ViewBag.Appraisal;
    Player currentPlayer = ViewBag.Player as Player;
    var profile = currentPlayer?.UserProfile ?? (await Context.GetUserAsync());

    CampaignMissionDataModel mission = (CampaignMissionDataModel)ViewBag.CurrentMission;

    StageProgress current = (StageProgress)ViewBag.StageProgress;

}
@{
    var lessons = models.GetTable<LessonTime>()
                    .Where(l => l.ClassTime >= current.StartDate)
                    .Where(l => l.ClassTime < current.EndExclusiveDate)
                    .Where(l => l.LessonAttendance != null);

    var items = models.PromptLearnerLessons(
                profile.UID.PromptLearnerRegisterLessons(models)
                    .Join(models.PromptComleteLessonPrice(),
                        r => r.ClassLevel, p => p.PriceID, (r, p) => r),
                lessons);
    mission.ResultModel = items;
    mission.CheckResult = items.Count() >= (int)mission.Goal;

}

