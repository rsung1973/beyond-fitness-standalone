@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using System.Web

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using WebHome.Models.Resources
@using WebHome.Properties
@using WebHome.Helper.BusinessOperation

@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;

    Layout = "~/Views/LearnerActivity/Template/MainPage.cshtml";

    ViewBag.From = "TransactionForActiveContract";
    
    String lang = ViewBag.Lang ?? "zh-TW";
    var langPath = lang == "zh-TW"
        ? "tw"
        : lang == "en-US"
            ? "en"
            : "ja";

    var profile = (await Context.GetUserAsync()).LoadInstance(models);
    var _learner = profile.LoadInstance(models);

}

@section MainContent
{

    <div class="card header-card shape-rounded" data-card-height="310">
        <div class="card-overlay bg-beyond-dark opacity-95"></div>
    </div>
    <!--統計輪播-->
    <div class="splide single-slider slider-no-arrows homepage-slider" id="single-slider-1">
        <div class="splide__track">
            <div class="splide__list">
                @{
                    int remainedCount;
                    IQueryable<RegisterLesson> remainedLessons;
                    var remainedItems = _learner.RemainedLessonCount2024(models, out remainedCount, out remainedLessons, out List<RegisterLesson> remainedPTItems, out List<RegisterLesson> remainedSRItems, out List<RegisterLesson> remainedSDItems, out List<RegisterLesson> remainedPIItems);
                    remainedCount = remainedPTItems.Sum(r => r.RemainedLessonCount(false));
                }
                @if (remainedCount > 0)
                {
                    <div class="splide__slide">
                        <div class="card rounded-l mx-2 text-center shadow-l preload-img" data-src="../images/card/PT.jpg"
                             data-card-height="320">
                            <div class="card-bottom">
                                <h1 class="font-24 font-700">
                                    P.T Session<em class="badge bg-beyond-dark color-beyondwhite-dark fst-italic rounded-circle px-2 py-1 ms-2 font-12">@(remainedPTItems.Count(r=>r.RegisterLessonContract!=null))</em>
                                </h1>
                                <p class="boxed-text-xl">
                                    <b class="color-beyondred-dark">可用<u class="fst-italic px-2">@(remainedCount)</u>堂</b>
                                </p>
                            </div>
                            <div class="card-overlay bg-gradient-fade"></div>
                        </div>
                    </div>
                }
                @{
                    remainedCount = remainedPIItems.Sum(r => r.RemainedLessonCount(false));
                }
                @if (remainedCount > 0)
                {
                    <div class="splide__slide">
                        <div class="card rounded-l mx-2 text-center shadow-l preload-img" data-src="../images/card/PI.jpg"
                             data-card-height="320">
                            <div class="card-bottom">
                                <h1 class="font-24 font-700">
                                    P.I Session<em class="badge bg-beyond-dark color-beyondwhite-dark fst-italic rounded-circle px-2 py-1 ms-2 font-12">@(remainedPIItems.Count(r=>r.RegisterLessonContract!=null))</em>
                                </h1>
                                <p class="boxed-text-xl">
                                    <b class="color-beyondred-dark">可用<u class="fst-italic px-2">@(remainedCount)</u>堂</b>
                                </p>
                            </div>
                            <div class="card-overlay bg-gradient-fade"></div>
                        </div>
                    </div>
                }
                @{
                    remainedCount = remainedSRItems.Sum(r => r.RemainedLessonCount(false));
                }
                @if (remainedCount > 0)
                {
                    <div class="splide__slide">
                        <div class="card rounded-l mx-2 text-center shadow-l preload-img" data-src="../images/card/SR.jpg"
                             data-card-height="320">
                            <div class="card-bottom">
                                <h1 class="font-24 font-700">
                                    S.R Session<em class="badge bg-beyond-dark color-beyondwhite-dark fst-italic rounded-circle px-2 py-1 ms-2 font-12">@(remainedSRItems.Count(r=>r.RegisterLessonContract!=null))</em>
                                </h1>
                                <p class="boxed-text-xl">
                                    <b class="color-beyondred-dark">可用<u class="fst-italic px-2">@(remainedCount)</u>堂</b>
                                </p>
                            </div>
                            <div class="card-overlay bg-gradient-fade"></div>
                        </div>
                    </div>
                }
                @{
                    remainedCount = remainedSDItems.Sum(r => r.RemainedLessonCount(false));
                }
                @if (remainedCount > 0)
                {
                    <div class="splide__slide">
                        <div class="card rounded-l mx-2 text-center shadow-l preload-img" data-src="../images/card/SD.jpg"
                             data-card-height="320">
                            <div class="card-bottom">
                                <h1 class="font-24 font-700">
                                    S.D Session<em class="badge bg-beyond-dark color-beyondwhite-dark fst-italic rounded-circle px-2 py-1 ms-2 font-12">@(remainedSDItems.Count(r=>r.RegisterLessonContract!=null))</em>
                                </h1>
                                <p class="boxed-text-xl">
                                    <b class="color-beyondred-dark">可用<u class="fst-italic px-2">1</u>堂</b>
                                </p>
                            </div>
                            <div class="card-overlay bg-gradient-fade"></div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <!--交易類型-->
    @{
        await Html.RenderPartialAsync("~/Views/LearnerActivity/Page.zh-TW/Module/TransactionTypeItem.cshtml");
    }
    @{ 
        CourseContractQueryViewModel viewModel = new CourseContractQueryViewModel
        {
            MemberID = _learner.UID,
            ContractQueryMode = Naming.ContractServiceMode.ContractOnly,
            Status = (int)Naming.CourseContractStatus.已生效,
        };
        IQueryable<CourseContract> items = viewModel.InquireContract(models);
    }
    <!--合約清單-->
    <div class="card mt-5 mb-0">
        <div class="content mx-4 mx-lg-5 mx-md-4 my-5">
            <h4 class="mb-2 text-uppercase letter-spacing-2 d-inline font-20">生效中合約·<small
                    class="ps-2 font-14 font-400 text-capitalize opacity-60">Active Contract</small></h4>
            <svg width="100%" height="10" xmlns="http://www.w3.org/2000/svg" class="mt-3 mb-5">
                <rect x="0" y="0" width="50" height="3" rx="3" ry="3" fill="#E76751" />
            </svg>
            <div class="clearfix"></div>

            @{
                var idx=0;
                foreach (var item in items.OrderByDescending(l => l.Expiration))
                {          
                    idx++;
                    var usepercent = Math.Round(((item.Lessons - item.RemainedLessonCount()) / (decimal?)item.Lessons).Value * 100M, 0);

                    var iconDisplay = "fa-solid fa-user";
                    if (item.CourseContractType.ContractCode.StartsWith("CN")) {
                        iconDisplay = "fa-solid fa-apple-whole";
                    } else if (item.CourseContractType.ContractCode.StartsWith("CR")) {
                        iconDisplay = "fa-solid fa-hands";
                    } else if (item.CourseContractType.ContractCode.StartsWith("CI")) {
                        iconDisplay = "fa-regular fa-user";
                    } else {
                        iconDisplay = "fa-solid fa-user";
                    }

                    if (idx > 1 ) {
                        <div class="divider mt-4 mb-4"></div>
                    }
                    <div class="d-flex" onclick="javascript:gotoContractInfo('@Html.Raw(item.ContractID.EncryptKey())');">
                        <div>
                            <a href="javascript:gotoContractInfo('@Html.Raw(item.ContractID.EncryptKey())');"
                                class="icon icon-l bg-beyond-dark color-beyondwhite-dark rounded-m shadow-xl"><i
                                    class="@(iconDisplay) font-24"></i></a>
                        </div>
                        <div class="align-self-center ps-3">
                        <h5 class="font-500 font-18 mb-1 letter-spacing-1">@(item.CourseContractType.TypeName.CutString('-'))</h5>
                        <b class="font-15 color-beyondred-dark fst-italic">@(item.RemainedLessonCount())</b><span
                            class="font-15 color-theme opacity-60 letter-spacing-1"> / @(item.Lessons)</span>
                            <div class="progress mt-3" style="height:2px; width:150px;">
                                <div class="progress-bar border-0 bg-fade-highlight-dark text-start ps-2" role="progressbar"
                                    style="width: @(usepercent)%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100">
                                </div>
                            </div>
                            <span class="font-10 color-theme opacity-30">@(usepercent)% Completed</span>
                        </div>
                        <div class="align-self-center ms-auto me-3">
                            <span class="color-theme d-block text-end font-13">@($"{item.Expiration:yyyy/MM/dd}")</span>
                        </div>
                        <div class="align-self-center">
                            <i class="fa fa-angle-right color-highlight font-16"></i>
                        </div>
                    </div>                                
                }  
            }
    
            <p>
                <a href="TransactionForHistoryContract"
                    class="float-end btn btn-border rounded-xl fst-italic border-lightgray-dark color-theme bg-theme px-3 py-1 font-14 mt-5">歷史紀錄</a>
            </p>
        </div>
    </div>

    <script>
        function gotoContractInfo(keyID) {
            $('').launchDownload('@Html.Raw(Url.Action("ContractInfo", "LearnerActivity"))',{'keyID':keyID, 'from': '@Html.Raw(Url.Action("TransactionForActiveContract","LearnerActivity"))'});
        }  
    </script>  
}

@section PopupBox
{
   
}