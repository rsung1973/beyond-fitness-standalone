@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using WebHome.Models.Resources

@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;

    Layout = "~/Views/LearnerActivity/Template/MainPage.cshtml";
    ViewBag.From = "ContactBook";
    
    String lang = ViewBag.Lang ?? "zh-TW";
    var langPath = lang == "zh-TW"
        ? "tw"
        : lang == "en-US"
            ? "en"
            : "ja";

    var profile = (await Context.GetUserAsync()).LoadInstance(models);

    var lessons = profile.UID.PromptLearnerLessons(models);
}

@section MainContent
{

    <div class="card header-card shape-rounded" data-card-height="310">
        <div class="card-overlay bg-beyond-dark opacity-95"></div>
    </div>
    <!--家庭聯絡簿清單-->
    <div class="card card-style custom-rounded-card top-100">
        <div class="content text-center mt-5">
            <h2 class="letter-spacing-5 font-24">運動日誌</h2>
            <p class="boxed-text-xl">Workout Logs</p>
        </div>

        <div class="divider divider-small mb-3 bg-beyondred-dark"></div>
        <div class="content text-center px-3 px-lg-5 px-md-5 mx-lg-auto mx-md-auto">
            @{ 
                DateTime startDate = DateTime.Today.FirstDayOfMonth();
                var thisMonthLessons = lessons.Where(l => l.ClassTime >= startDate)
                                            .Where(l => l.ClassTime < startDate.AddMonths(1));
                var completeLessons = thisMonthLessons.Where(l => l.LessonAttendance != null);
                int completePercent = thisMonthLessons.Any() ? completeLessons.Count()*100/thisMonthLessons.Count() : 0;
            }            
            <div class="progress rounded-l mb-3" style="height:20px;">
                <div class="progress-bar border-0 bg-beyondwhite-dark text-start ps-2" role="progressbar" style="width: @(completePercent)%"
                     aria-valuenow="10" aria-valuemin="0" aria-valuemax="100">
                </div>
            </div>
            <span class="font-14 color-theme opacity-70">               
                本月訓練完成率 <b class="color-beyondred-dark font-600 fst-italic">@(completePercent)%</b>
            </span>
        </div>
        <div class="content mb-2 mx-lg-auto mx-md-auto">
            <script>
                var currentIndex = 0;
            </script>
            @{
                await Html.RenderPartialAsync("~/Views/LearnerActivity/Page.zh-TW/Module/LessonItemList.cshtml");
            }

            <p id="moreItems" class="text-center pb-3">

                <a href="javascript:readMore();"
                   class="btn border-0 fst-italic border-lightgray-dark color-theme bg-theme px-3 py-1 font-14 mt-5">
                    Read More<i class="fa-solid fa-angles-down ps-2"></i>
                </a>

            </p>

        </div>

    </div>

    <!--專屬團隊-->
    <div class="card card-style bg-beyond-dark mb-0 mx-3">
        <div class="content mx-4 mx-lg-5 mx-md-5 my-5 text-center">
            <h2 class="color-beyondred-dark letter-spacing-2">專屬團隊</h2>
            <p class="boxed-text-xl color-white">Your Exclusive Team</p>
            @{
                var primaryCoach = profile.LearnerCoachProperty.Where(p => p.PropertyID == (int)LearnerCoachProperty.PropertyType.PrimaryCoach).Select(p => p.ServingCoach);
                foreach (var coach in primaryCoach)
                {
                    <img src="@Html.Raw($"{VirtualPathUtility.ToAbsolute("~/Information/GetResource")}/{coach.UserProfile.PictureID}?stretch=true")" class="rounded-circle mb-2 mt-2" width="100" height="100" />

                    <h4 class="mb-n1 color-beyondwhite-dark">@Html.Raw(coach.UserProfile.Nickname)</h4>

                    <p class="mb-3 font-14 mt-1 color-beyondwhite-light">主教練</p>
                }
            }
            <div class="team-container">
                @{
                        foreach (var coach in profile.LearnerFitnessAdvisor.Select(f => f.ServingCoach).Where(c => !primaryCoach.Any(p => c.CoachID == p.CoachID) )){
                            <div class="card bg-transparent">
                                <div class="m-auto">
                                    <img src="@Html.Raw($"{VirtualPathUtility.ToAbsolute("~/Information/GetResource")}/{coach.UserProfile.PictureID}?stretch=true")"
                                        class="rounded-circle mb-2 mt-2" width="50" height="50">
                                    <h4 class="mb-n2 font-14 color-beyondwhite-dark">@Html.Raw(coach.UserProfile.Nickname.CutString(' '))</h4>
                                    <p class="mb-0 font-12 mt-1 color-beyondwhite-light">私人教練</p>
                                </div>
                            </div>
                        }
                    }                                  
            </div>           
        </div>
    </div>
    <script>

        function readMore() {
            var viewModel = {
                'currentIndex': currentIndex
            };
            doPost('@Html.Raw(Url.Action("LessonItemList", "LearnerActivity"))', viewModel,
                function (data) {
                    $(data).insertBefore($('#moreItems'));
                    if (currentIndex < 0) {
                        $('#moreItems').remove();
                    }
                },
                function () {

                });
        }

    </script>

}
