@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using System.Web

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using CommonLib.Utility
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using WebHome.Models.Resources
@using WebHome.Properties
@using WebHome.Models.Timeline

@{
    ModelSource<UserProfile> models;
    ModelStateDictionary _modelState;

    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"]; ;
    _modelState = ViewContext.ModelState;

    Layout = "~/Views/LearnerActivity/Template/MainPage.cshtml";
    ViewBag.From = "Events";

    String lang = ViewBag.Lang ?? "zh-TW";
    var langPath = lang == "zh-TW"
        ? "tw"
        : lang == "en-US"
            ? "en"
            : "ja";

    var profile = await Context.GetUserAsync();
    List<TimelineEvent> events = new List<TimelineEvent>();
    ViewBag.UserNotice = events;

    TimelineEvent eventItem = profile.PromptEffectiveSystemBulletin(models);
    IQueryable<SystemEventBulletin> items = ((SystemBulletinEvent)eventItem)?.BulletinEventList;
    if (eventItem != null)
    {
        events.Add(eventItem);
    }

    eventItem = profile.CheckPromptContractEvent(models);
    int contractCount = 0;
    if (eventItem != null)
    {
        events.Add(eventItem);
        contractCount += ((PromptContractEvent)eventItem).ContractList.Count();
    }

    eventItem = profile.CheckPayoffDueEvent(models);
    if (eventItem != null)
    {
        events.Add(eventItem);
        contractCount += ((PromptPayoffDueEvent)eventItem).ContractList.Count();
    }

    eventItem = profile.CheckSignContractEvent(models);
    if (eventItem != null)
    {
        events.Add(eventItem);
        var _item = (PromptSignContractEvent)eventItem;
        int count = _item.ContractList.Where(c => !c.InstallmentID.HasValue).Count()
                        + _item.ContractList.Where(c => c.InstallmentID.HasValue)
                            .GroupBy(c => c.InstallmentID).Count(); 
        contractCount += count;
    }

    eventItem = profile.CheckSignContractServiceEvent(models);
    if (eventItem != null)
    {
        events.Add(eventItem);
        contractCount += ((PromptSignContractServiceEvent)eventItem).ContractList.Count();
    }

}

@section MainContent
{
    <div class="card header-card" data-card-height="310">
        <div class="card-overlay bg-beyond-dark opacity-95"></div>
    </div>
    <!--快訊類型-->
    <div class="content mt-5">
        <div class="row mb-0">
            <a href="Events" class="col-4">
                <div class="card card-style text-center py-3 mx-0 mb-0 newsfeed @(ViewBag.EventCatelog == 0 ? "active" : null)">
                    <i class="fa fa-user-check font-24 color-theme opacity-30"></i>
                    <em class="badge bg-beyond-dark opacity-30">6</em>
                    <p class="font-500 mb-n2 mt-3 color-theme font-16">任務通知</p>
                </div>

            </a>
            <a href="ContractEvents" class="col-4">
                <div class="card card-style text-center py-3 mx-0 mb-0 newsfeed @(ViewBag.EventCatelog == 1 ? "active" : null)">
                    <i class="fa-solid fa-file-signature font-24 color-theme opacity-30"></i>
                    <em class="badge bg-beyond-dark opacity-30">@(contractCount)</em>
                    <p class="font-500 mb-n2 mt-3 color-theme font-16">合約服務</p>
                </div>
            </a>
            <a href="SystemEvents" class="col-4">
                <div class="card card-style text-center py-3 mx-0 mb-0 newsfeed @(ViewBag.EventCatelog == 2 ? "active" : null)">
                    <i class="fa-solid fa-bullhorn font-24 color-theme opacity-30"></i>
                    <em class="badge bg-beyond-dark opacity-30">@(items?.Count() ?? 0)</em>
                    <p class="font-500 mb-n2 mt-3 color-theme font-16">貼心提醒</p>
                </div>
            </a>
        </div>
    </div>

    <!--訊息內容-->
    <div class="card" style="box-shadow:none">
        <div class="content mx-4 mx-lg-5 mx-md-4 my-5">
            @RenderSection("EventList", false)
        </div>
    </div>
}

@section PopupBox
{
    <div id="menu-notify" class="menu menu-box-bottom menu-box-detached bg-white rounded-m"
         data-menu-height="450" data-menu-effect="menu-over" style="display: block;">
    </div>

    <div id="menu-warning" class="menu menu-box-bottom menu-box-detached bg-white rounded-m"
         data-menu-height="330" data-menu-effect="menu-over" style="display: block;">
    </div>

}