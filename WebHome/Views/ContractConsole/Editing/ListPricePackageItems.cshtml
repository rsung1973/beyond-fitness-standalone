@using System.IO
@using System.Linq.Expressions

@using WebHome.Helper
@using WebHome.Models.Locale
@using WebHome.Models.ViewModel
@using WebHome.Models.DataEntity
@using WebHome.Controllers
@using Microsoft.AspNetCore.Mvc.ModelBinding
@{

    ModelStateDictionary _modelState;
    ModelSource<UserProfile> models;
    LessonPriceType _model;
    CourseContractQueryViewModel _viewModel;

    _modelState = ViewContext.ModelState;
    models = (ModelSource<UserProfile>)ViewContext.HttpContext.Items["Models"];
    _model = this.Model as LessonPriceType;
    _viewModel = (CourseContractQueryViewModel)ViewBag.ViewModel;

    if (_model == null)
    {
        if (_viewModel.OrderPriceID != null && _viewModel.OrderPriceID.Length > 0)
        {
            _model = models.GetTable<LessonPriceType>()
                .Where(p => p.PriceID == _viewModel.OrderPriceID[0]).FirstOrDefault();
        }
    }

    CourseContract _contract = ViewBag.DataItem as CourseContract;
}

@if (_model != null)
{
    <script>
        $(function(){
            $global.viewModel.OrderPriceID = [];
            $global.viewModel.OrderPriceID[0] = @(_model.PriceID);
            $global.viewModel.OrderLessons = [];
        });
    </script>

    <div class="col-lg-3 col-md-6 col-sm-6 col-12 forPT">
        <div class="header">
            @{
                switch((Naming.LessonPriceStatus?)_model.Status)
                {
                    case Naming.LessonPriceStatus.營養課程:
                        <text>S.D Session</text>
                        break;
                    case Naming.LessonPriceStatus.運動恢復課程:
                        <text>S.R Session</text>
                        break;
                    case Naming.LessonPriceStatus.運動防護課程:
                        <text>A.T Session</text>
                        break;
                    default:
                        <text>P.T Session</text>
                        break;
                }
            }
            <small class="badge badge-info">@Html.Raw(_model.DurationInMinutes)分鐘 / @($"{_model.ListPrice:##,###,###,###}")元</small>
        </div>
        <div class="input-group">
            @{
                var order = _contract?.CourseContractOrder?.Where(o => o.PriceID == _model.PriceID).FirstOrDefault();
            }
            <input type="text" class="form-control form-control-danger forPT" name="OrderLessons" placeholder="請輸入堂數" value="@(order?.Lessons)" />
            <span class="input-group-addon">
                <i class="zmdi zmdi-shopping-cart-plus"></i>
            </span>
            <script>
                $(function(){
                    $global.viewModel.OrderLessons[0] = '@(order?.Lessons)';
                });
            </script>
        </div>
        @if (!_model.LessonPricePackage.Any())
        {
            BuildCalcTotalInfo();
        }
    </div>
    int idx = 1;
    foreach (var item in _model.LessonPricePackage.Select(p => p.PackageItemPrice))
    {
        <div class="col-lg-3 col-md-6 col-sm-6 col-12 forAddon">
            <script>
                $(function(){
                    $global.viewModel.OrderPriceID[@(idx)] = @(item.PriceID);
                });
            </script>
            <div class="header">
                <span class="col-red">加購</span>
                @{
                    switch ((Naming.LessonPriceStatus?)item.Status)
                    {
                        case Naming.LessonPriceStatus.營養課程:
                            <text>S.D Session</text>
                            break;
                        case Naming.LessonPriceStatus.運動恢復課程:
                            <text>S.R Session</text>
                            break;
                        case Naming.LessonPriceStatus.運動防護課程:
                            <text>A.T Session</text>
                            break;
                        default:
                            <text>P.T Session</text>
                            break;
                    }
                }
                <small class="badge badge-info">
                    @{
                        var property = item.LessonPriceProperty.Where(p => p.PropertyID == (int)Naming.LessonPriceFeature.BundlePackage).FirstOrDefault();
                        if(property!=null)
                        {
                            <text>@Html.Raw(property.Description)</text>
                        }
                        else
                        {
                            <text>@Html.Raw(item.DurationInMinutes)分鐘</text>
                        }
                    }
                     / @($"{item.ListPrice * (item.BundleCount ?? 1):##,###}")元</small>
            </div>
            @{
                order = _contract?.CourseContractOrder?.Where(o => o.PriceID == item.PriceID).FirstOrDefault();
            }
            <div class="input-group">
                <input type="text" class="form-control form-control-danger" name="OrderLessons" placeholder="請輸入堂數" value="@(order?.Lessons)" />
                <span class="input-group-addon">
                    <i class="zmdi zmdi-shopping-cart-plus"></i>
                </span>
                <script>
                    $(function(){
                        $global.viewModel.OrderLessons[@(idx++)] = '@(order?.Lessons)';
                    });
                </script>
            </div>
            @if (idx > _model.LessonPricePackage.Count)
            {
                BuildCalcTotalInfo();
            }
        </div>
    }
}

@functions
{
    void BuildCalcTotalInfo()
    {
        <button type="button" class="btn btn-warning btn-sm btn-round waves-effect float-right" onclick="calcTotalCost();">計算堂數與價格</button>        
    }
}





